{"version":3,"sources":["base/_font-face.scss","base/_general.scss","base/_root.scss","abstracts/_functions.scss","abstracts/_breakpoints.scss","components/_header.scss","abstracts/_mixins.scss","components/_section.scss","components/_footer.scss"],"names":[],"mappings":"AAAA,WACE,oBAAA,CACA,iEAAA,CACA,eAAA,CACA,iBAAA,CACA,iBAAA,CAGF,WACE,oBAAA,CACA,iEAAA,CACA,eAAA,CACA,iBAAA,CACA,iBAAA,CCbF,mBAGE,QAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAGF,UAEE,WAAA,CACA,UAAA,CAGF,KACE,oBAAA,CACA,eAAA,CACA,gBAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CAGF,KACE,kBAAA,CAAA,iBAAA,CAAA,aAAA,CCrBF,MCMM,mCAAA,CAAA,kCAAA,CAAA,kCAAA,CAAA,kCAAA,CAAA,kCAAA,CAAA,mCAAA,CAAA,mCAAA,CAAA,oCAAA,CAAA,oCAAA,CAAA,oCAAA,CAAA,qCAAA,CAAA,oCAAA,CAAA,oCAAA,CAAA,oCAAA,CAAA,oCAAA,CASE,cAAA,CAAA,kBAAA,CAAA,kBAAA,CAAA,kBAAA,CAAA,kBAAA,CAAA,kBAAA,CCNJ,2CFTJ,MCsBU,cAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,CEtBV,QCDE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CDEA,eAAA,CACA,sCAAA,CAEA,WACE,cAAA,CACA,4BAAA,CERJ,SDDE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CCEA,eAAA,CACA,uCAAA,CAEA,gBACE,mBAAA,CAGF,gBDXA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CCWE,kBAAA,CAEA,mBACE,8BAAA,CAKF,wBACE,cAAA,CACA,iBAAA,CACA,YAAA,CACA,4BAAA,CCxBN,QFDE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CEEA,eAAA,CACA,yCAAA,CAEA,WACE,cAAA,CACA,2BAAA","file":"styles.min.css","sourcesContent":["@font-face {\n  font-family: 'Roboto';\n  src: url('../../assets/fonts/Roboto-Medium.woff2') format('woff2');\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url('../../assets/fonts/Roboto-Medium.woff2') format('woff2');\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}","*,\n::before,\n::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  font-family: 'Roboto';\n  font-weight: 400;\n  line-height: 1.28;\n  display: flex;\n  flex-direction: column;\n}\n\nmain {\n  flex: 1 1 auto;\n}\n","@use '../abstracts' as *;\r\n\r\n:root {\r\n  @include rootOutput(); // Include root output function\r\n}\r\n","@use \"colors\" as c;\r\n@use \"breakpoints\" as b;\r\n@use \"type\" as t;\r\n\r\n@mixin rootOutput() {\r\n  // Loop through the map of colors palette\r\n  @each $color, $shades in c.$colors {\r\n    @each $shade, $value in $shades {\r\n      --clr-#{$color}-#{$shade}: #{$value};\r\n    }\r\n  }\r\n\r\n  // Loop through the type scale map\r\n  @each $screen-size, $font-sizes in t.$type-scale {\r\n    // For the small screen size, apply font sizes directly without a media query\r\n    @if $screen-size == small {\r\n      @each $size, $value in $font-sizes {\r\n        --fs-#{$size}: #{$value};\r\n      }\r\n\r\n      // For all other screen sizes, apply font sizes within a media query\r\n    } @else {\r\n      @include b.mq(xl) {\r\n        @each $size, $value in $font-sizes {\r\n          --fs-#{$size}: #{$value};\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","$breakpoints: (\r\n  xl: 1200px,\r\n  lg: 1024px,\r\n  md: 768px,\r\n  sm: 640px,\r\n);\r\n\r\n@mixin mq($key) {\r\n  $size: map-get($breakpoints, $key);\r\n\r\n  @if $size {\r\n    @media only screen and (max-width: $size) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @error \"#{$key} does not exist in the \\$breakpoints map\";\r\n  }\r\n}","@use '../abstracts/' as *;\r\n\r\n.header {\r\n  @include flex-center;\r\n\r\n  max-height: 70px;\r\n  background-color: var(--clr-accent-400);\r\n\r\n  h2 {\r\n    font-size: 32px;\r\n    color: var(--clr-primary-100);\r\n  }\r\n}\r\n","@mixin flex-center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n@mixin abs-center {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  translate: -50%, -50%;\r\n}\r\n\r\n@mixin reset-link {\r\n  color: inherit;\r\n\r\n  &,\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin reset-button {\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: none;\r\n}\r\n\r\n@mixin visually-hidden {\r\n  position: absolute !important;\r\n  width: 1px !important;\r\n  height: 1px !important;\r\n  margin: -1px !important;\r\n  border: 0 !important;\r\n  padding: 0 !important;\r\n  white-space: nowrap !important;\r\n  clip-path: inset(100%) !important;\r\n  clip: rect(0 0 0 0) !important;\r\n  overflow: hidden !important;\r\n}\r\n","@use '../abstracts' as *;\n\n.section {\n  @include flex-center;\n\n  min-height: 100%;\n  background-color: var(--clr-primary-200);\n\n  &__inner {\n    padding-inline: 50px;\n  }\n\n  &__title {\n    @include flex-center;\n    margin-bottom: 50px;\n\n    h1 {\n      color: var(--clr-secondary-500);\n    }\n  }\n\n  &__description {\n    p {\n      font-size: 20px;\n      text-align: center;\n      padding: 20px;\n      color: var(--clr-primary-500);\n    }\n  }\n}\n","@use '../abstracts' as *;\r\n\r\n.footer {\r\n  @include flex-center;\r\n\r\n  max-height: 70px;\r\n  background-color: var(--clr-secondary-500);\r\n\r\n  h2 {\r\n    font-size: 32px;\r\n    color: var(--clr-accent-400);\r\n  }\r\n}\r\n"]}